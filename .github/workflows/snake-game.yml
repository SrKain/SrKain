# Este é um fluxo de trabalho básico para ajudá-lo a começar com Actions

name: CI

# Controles para quando o fluxo de trabalho será executado
on:
  # Aciona o fluxo de trabalho em eventos de push ou pull request, mas apenas para o branch "main"
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Permite que você execute este fluxo de trabalho manualmente na aba Actions
  workflow_dispatch:

# Um fluxo de trabalho é composto por um ou mais jobs que podem ser executados sequencialmente ou em paralelo
jobs:
  # Este fluxo de trabalho contém um único job chamado "build"
  build:
    # O tipo de runner que será utilizado para o job
    runs-on: ubuntu-latest

    # Steps representam uma sequência de tarefas que serão executadas como parte do job
    steps:
      # Verifica seu repositório no $GITHUB_WORKSPACE, para que seu job possa acessá-lo
      - uses: actions/checkout@v4

      # Executa um script de uma linha usando o shell do runner
      - name: Run a one-line script
        run: echo Hello, world!

      # Executa um conjunto de comandos usando o shell do runner
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      # Nome da Actions:  
name: SnakeGame

# Controlador do tempo que sera feito a atualização dos arquivos.
on:
  schedule:
    # Será atualizado a cada 5 horas.
    - cron: "0 */5 * * *"

# Regras
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    # Checks repo under $GITHUB_WORKSHOP, so your job can access it
      - uses: actions/checkout@v3

    # Repositorio que será utilizado para gerar os arquivos.
      - uses: Platane/snk@master
        id: snake-gif
        with:
          github_user_name: srkain
          gif_out_path: dist/github-contribution-grid-snake.gif
          svg_out_path: dist/github-contribution-grid-snake.svg

      - run: git status

      # Para as atualizações.
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master
          force: true

      - uses: crazy-max/ghaction-github-pages@v2.1.3
        with:
          # the output branch we mentioned above
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
